:root {
    --color-primary: #2584ff;
    --color-secondary: #00d9ff;
    --color-accent: #ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;
}


/* Typography */

html {
    /* browser sets default font size of 16px, i.e. 'font-size: 16px;' */
    /* 62.5% of 16px = 10px */
    font-size: 62.5%;
    /* thus font-size specified in subsequent body, h1, h2, h3 elements is much easier to calculate */
    /* 1 x font size of html element; i.e. 1rem equates to 10px */
}

body {
    font-family: Inter, Arial, Helvetica, sans-serif;
    font-size: 2.4rem;      /* 24px */
    line-height: 1.5;       /* this means 1.5x the current font size */
    color: var(--color-body);
}

h1, h2, h3 {
    color: var(--color-headings);
    margin-bottom: 1rem;
}

h1 {
    font-size: 7rem;        /* 70px */
}

h2 {
    font-size: 4rem;        /* 40px */
}

h3 {
    font-size: 3rem;        /* 30px */
}

p {
    margin-top: 0;
}

@media screen and (min-width: 1024px) {
    body {
        font-size: 1.8rem;
    }

    h1 {
        font-size: 8rem;
    }

    h2 {
        font-size: 4rem;
    }

    h3 {
        font-size: 2.4rem;
    }
}


/* Links */

a {
    text-decoration: none;
}

.link-arrow {
    color: var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}

.link-arrow::after {
    content: '-->';
    margin-left: 5px;       /* using pixel value b/c we want space to always be the same no matter how large font is */
    transition: margin 0.15s;
}

.link-arrow:hover::after {
    margin-left: 10px;
}

@media screen and (min-width: 1024px) {
    .link-arrow {
        font-size: 1.5rem;
    }
}


/* Badges */

/* define badge structure (object-oriented css) */
.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: 0.5rem 2rem;
    white-space: nowrap;    /* prevent badge from wrapping into a 2nd line (particularly important when we have limited space) */
}

/* define badge skin (object-oriented css) */
.badge--primary {           /* BEM convention; separating block from a modifier using double hyphen */
    background: var(--color-primary);
    color: #fff;
}

/* define badge skin (object-oriented css) */
.badge--secondary {             /* BEM convention; separating block from a modifier using double hyphen */
    background: var(--color-secondary);
    color: #fff;
}

.badge--small {
    font-size: 1.6rem;
}

@media screen and (mid-width: 1024px) {
    .badge {
        font-size: 1.5rem;
    }

    .badge--small {
        font-size: 1.2rem;
    }
}


/* Lists */

/* define list structure (object-oriented css) */
.list {
    list-style: none;       /* get rid of default bullet point */
    padding-left: 0;        /* get rid of left padding that all browswers apply by default */
    color: var(--color-headings);
}

/* define list skin (object-oriented css) */
.list--inline .list__item {     /* BEM convention; separating block from a modifier using double hyphen */
    display: inline-block;
    margin-right: 2rem;
}

.list--tick {
    list-style-image: url(../images/tick.svg);
    padding-left: 3rem;
}

.list--tick .list__item {  /* this is a good case of when you'd use nesting (cannot remove .list--tick without adverse affect) */
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
    .list--tick .list__item {
        padding-left: 0;
    }
}